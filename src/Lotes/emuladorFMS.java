/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Lotes;

import java.util.Map;
import javax.swing.table.DefaultTableModel; 

/**
 *
 * @author ricardomedina
 */
public class emuladorFMS extends javax.swing.JFrame {

    /**
     * Creates new form emuladorFMS
     */
    public emuladorFMS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDatos = new javax.swing.JTable();
        emuladorFmsText = new javax.swing.JLabel();
        btn_cancelar = new javax.swing.JButton();
        label_operaciones = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        label_name1 = new javax.swing.JLabel();
        txt_operacion1 = new javax.swing.JTextField();
        txt_operacion2 = new javax.swing.JTextField();
        txt_operacion3 = new javax.swing.JTextField();
        txt_operacion4 = new javax.swing.JTextField();
        txt_operacion5 = new javax.swing.JTextField();
        txt_operacion6 = new javax.swing.JTextField();
        txt_operacion7 = new javax.swing.JTextField();
        txt_operacion8 = new javax.swing.JTextField();
        txt_operacion9 = new javax.swing.JTextField();
        txt_operacion10 = new javax.swing.JTextField();
        btn_play = new javax.swing.JButton();
        jb_date = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Emulador FMS");
        setBackground(new java.awt.Color(26, 26, 26));
        setBounds(new java.awt.Rectangle(250, 250, 775, 586));
        setMaximumSize(new java.awt.Dimension(775, 586));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        tableDatos.setBackground(new java.awt.Color(26, 26, 26));
        tableDatos.setForeground(new java.awt.Color(0, 177, 0));
        tableDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Fecha / Hora", "Operaci√≥n", "Resultado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableDatos);

        emuladorFmsText.setBackground(new java.awt.Color(0, 0, 0));
        emuladorFmsText.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        emuladorFmsText.setForeground(new java.awt.Color(0, 177, 0));
        emuladorFmsText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emuladorFmsText.setText("Emulador FMS");
        emuladorFmsText.setToolTipText("");
        emuladorFmsText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        emuladorFmsText.setBounds(new java.awt.Rectangle(450, 30, 300, 25));
        emuladorFmsText.setMaximumSize(new java.awt.Dimension(300, 25));
        emuladorFmsText.setMinimumSize(new java.awt.Dimension(300, 25));
        emuladorFmsText.setPreferredSize(new java.awt.Dimension(300, 25));

        btn_cancelar.setBackground(new java.awt.Color(26, 26, 26));
        btn_cancelar.setFont(new java.awt.Font("Monospaced", 1, 10)); // NOI18N
        btn_cancelar.setForeground(new java.awt.Color(0, 177, 0));
        btn_cancelar.setText("Cancel");
        btn_cancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_cancelar.setMaximumSize(new java.awt.Dimension(90, 25));
        btn_cancelar.setMinimumSize(new java.awt.Dimension(90, 25));
        btn_cancelar.setPreferredSize(new java.awt.Dimension(90, 25));
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        label_operaciones.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        label_operaciones.setForeground(new java.awt.Color(0, 177, 0));
        label_operaciones.setText("Operaciones: ");
        label_operaciones.setBounds(new java.awt.Rectangle(0, 0, 200, 25));
        label_operaciones.setMaximumSize(new java.awt.Dimension(200, 25));
        label_operaciones.setMinimumSize(new java.awt.Dimension(200, 25));
        label_operaciones.setPreferredSize(new java.awt.Dimension(200, 25));
        label_operaciones.setRequestFocusEnabled(false);

        txt_name.setBackground(new java.awt.Color(26, 26, 26));
        txt_name.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_name.setForeground(new java.awt.Color(0, 177, 0));
        txt_name.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_name.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_name.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_name.setPreferredSize(new java.awt.Dimension(200, 25));

        label_name1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        label_name1.setForeground(new java.awt.Color(0, 177, 0));
        label_name1.setLabelFor(txt_name);
        label_name1.setText("Nombre del programador: ");
        label_name1.setBounds(new java.awt.Rectangle(0, 0, 200, 25));
        label_name1.setMaximumSize(new java.awt.Dimension(200, 25));
        label_name1.setMinimumSize(new java.awt.Dimension(200, 25));
        label_name1.setPreferredSize(new java.awt.Dimension(200, 25));
        label_name1.setRequestFocusEnabled(false);

        txt_operacion1.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion1.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion1.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion1.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion1.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion1.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion1ActionPerformed(evt);
            }
        });

        txt_operacion2.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion2.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion2.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion2.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion2.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion2.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion2ActionPerformed(evt);
            }
        });

        txt_operacion3.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion3.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion3.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion3.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion3.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion3.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion3ActionPerformed(evt);
            }
        });

        txt_operacion4.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion4.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion4.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion4.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion4.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion4.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion4ActionPerformed(evt);
            }
        });

        txt_operacion5.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion5.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion5.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion5.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion5.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion5.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion5ActionPerformed(evt);
            }
        });

        txt_operacion6.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion6.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion6.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion6.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion6.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion6.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion6ActionPerformed(evt);
            }
        });

        txt_operacion7.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion7.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion7.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion7.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion7.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion7.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion7ActionPerformed(evt);
            }
        });

        txt_operacion8.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion8.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion8.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion8.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion8.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion8.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion8ActionPerformed(evt);
            }
        });

        txt_operacion9.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion9.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion9.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion9.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion9.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion9.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion9ActionPerformed(evt);
            }
        });

        txt_operacion10.setBackground(new java.awt.Color(26, 26, 26));
        txt_operacion10.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        txt_operacion10.setForeground(new java.awt.Color(0, 177, 0));
        txt_operacion10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_operacion10.setMaximumSize(new java.awt.Dimension(200, 25));
        txt_operacion10.setMinimumSize(new java.awt.Dimension(200, 25));
        txt_operacion10.setPreferredSize(new java.awt.Dimension(200, 25));
        txt_operacion10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_operacion10ActionPerformed(evt);
            }
        });

        btn_play.setBackground(new java.awt.Color(26, 26, 26));
        btn_play.setFont(new java.awt.Font("Monospaced", 1, 10)); // NOI18N
        btn_play.setForeground(new java.awt.Color(0, 177, 0));
        btn_play.setText("Play");
        btn_play.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_play.setMaximumSize(new java.awt.Dimension(90, 25));
        btn_play.setMinimumSize(new java.awt.Dimension(90, 25));
        btn_play.setPreferredSize(new java.awt.Dimension(90, 25));
        btn_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_playActionPerformed(evt);
            }
        });

        jb_date.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        jb_date.setForeground(new java.awt.Color(0, 177, 0));
        jb_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jb_date.setText("Fecha");
        jb_date.setBounds(new java.awt.Rectangle(-31981, -32691, 70, 20));
        jb_date.setMaximumSize(new java.awt.Dimension(70, 20));
        jb_date.setMinimumSize(new java.awt.Dimension(70, 20));
        jb_date.setPreferredSize(new java.awt.Dimension(70, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(emuladorFmsText, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label_name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label_operaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_operacion10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_play, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(emuladorFmsText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jb_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(label_name1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(label_operaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_operacion10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_play, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_operacion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion1ActionPerformed

    private void txt_operacion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion2ActionPerformed

    private void txt_operacion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion3ActionPerformed

    private void txt_operacion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion4ActionPerformed

    private void txt_operacion5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion5ActionPerformed

    private void txt_operacion6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion6ActionPerformed

    private void txt_operacion7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion7ActionPerformed

    private void txt_operacion8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion8ActionPerformed

    private void txt_operacion9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion9ActionPerformed

    private void txt_operacion10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_operacion10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_operacion10ActionPerformed

    private void btn_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_playActionPerformed
        //Aqui iniciamos el proceso...
        
        // creamos una instancia FMS
        FMS fms = new FMS();
        //creamos una instancia Lote...
        Lote lote = new Lote(); // aqui tenemos metodos muy valiosos...
        
        //lo primero que hay que hacer es mostrar la fecha de actual...
        String fechaActual = lote.fecha();
        
        //Escribimos la fecha en el label...
        jb_date.setText(fechaActual);
        
        // recopilamos el valor del text file nombre...
        String nombre = txt_name.getText();
        
        // recopilamos los valores en los text files de operaciones...
        String [] operaciones = new String[10];
        
        operaciones[0] = txt_operacion1.getText();
        operaciones[1] = txt_operacion2.getText();
        operaciones[2] = txt_operacion3.getText();
        operaciones[3] = txt_operacion4.getText();
        operaciones[4] = txt_operacion5.getText();
        operaciones[5] = txt_operacion6.getText();
        operaciones[6] = txt_operacion7.getText();
        operaciones[7] = txt_operacion8.getText();
        operaciones[8] = txt_operacion9.getText();
        operaciones[9] = txt_operacion10.getText();
        
        System.out.println("Op" + operaciones[0]);
        int n = 1; // inicializamos la bandera
        int i = 0; // inicializamos un iterador...
        // iniciamos el proceso...
        do{ // este bucle seguira hasta que n == 0;
            if(operaciones[i] != null && !operaciones[i].isEmpty()){
                // obtenemos la fecha actual...
                String date = lote.hora();

                //operacion...
                String operacionSinEspacios = lote.quitarEspacios(operaciones[i]);

                /*
                    Ahora sigue el separar los elementos de la operacion (simbolo, a, b) y luego instanciar
                    la clase Trabajo para usar el metodo procesar para obtener el resultado de la operacion...
                */

                //obtenemos el simbolo...
                char symbol = lote.simbolo(operacionSinEspacios);

                //inicializamos un array de doubles...
                double[] numeros = new double [2];
                //obtenemos los numeros...
                numeros = lote.numeros(operacionSinEspacios, symbol);


                // Instanciamos una clase Trabajo...
                Trabajo nuevoTrabajo = new Trabajo(nombre, symbol, numeros[0], numeros[1]);

                //obtenemos el resultado del proceso...
                double resultado = nuevoTrabajo.Procesar();

                fms.queue(nombre, date, operacionSinEspacios, resultado);
                     
                // verificamos si ya llegamos al limite de (10)...
                if(i == 9){
                    n = 0; 
                }
                
                //incrementamos...
                i++;
                
            } else{
                // verificamos si ya llegamos al limite de (10)...
                if(i == 9){
                    n = 0; 
                }
                
                // solamente incrementamos...
                i++;
            }
        } while(n != 0);
        
        // Pausa la ejecuci√≥n durante un segundo (1500 milisegundos)
        try {
            Thread.sleep(1500);
        } catch (InterruptedException e) {
            // Manejo de excepciones si es necesario
            e.printStackTrace();
        }
        
        // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) tableDatos.getModel();
        
        //imprimimos todos los datos de la queue...
        while(!fms.isEmpty()){
            Map<String, Object> elemento = (Map<String, Object>) fms.pullFromTheQueue();

            // Obtener los datos del elemento
            String programador = (String) elemento.get("nombre");
            String fecha = (String) elemento.get("fecha");
            String operacion = (String) elemento.get("operacion");
            double resultado = (double) elemento.get("resultado");

            // Agregar una nueva fila a la tabla con los datos obtenidos
            model.addRow(new Object[]{programador, fecha, operacion, resultado});

            // Pausa la ejecuci√≥n durante un segundo (1000 milisegundos)
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                // Manejo de excepciones si es necesario
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_playActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // borramos el nombre del programador...
        txt_name.setText("");
        
        //cambiamos el label...
        jb_date.setText("Fecha");
        
        // borramos el valor de todos los text file de operacion...
        txt_operacion1.setText("");
        txt_operacion2.setText("");
        txt_operacion3.setText("");
        txt_operacion4.setText("");
        txt_operacion5.setText("");
        txt_operacion6.setText("");
        txt_operacion7.setText("");
        txt_operacion8.setText("");
        txt_operacion9.setText("");
        txt_operacion10.setText("");
        
        // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) tableDatos.getModel();

        // Borrar todas las filas de la tabla
        model.setRowCount(0);
    }//GEN-LAST:event_btn_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(emuladorFMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(emuladorFMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(emuladorFMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(emuladorFMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new emuladorFMS().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_play;
    private javax.swing.JLabel emuladorFmsText;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jb_date;
    private javax.swing.JLabel label_name1;
    private javax.swing.JLabel label_operaciones;
    private javax.swing.JTable tableDatos;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_operacion1;
    private javax.swing.JTextField txt_operacion10;
    private javax.swing.JTextField txt_operacion2;
    private javax.swing.JTextField txt_operacion3;
    private javax.swing.JTextField txt_operacion4;
    private javax.swing.JTextField txt_operacion5;
    private javax.swing.JTextField txt_operacion6;
    private javax.swing.JTextField txt_operacion7;
    private javax.swing.JTextField txt_operacion8;
    private javax.swing.JTextField txt_operacion9;
    // End of variables declaration//GEN-END:variables
}
